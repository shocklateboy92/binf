@article{iHMMuneAlign,
	abstract = {Motivation: Immunoglobulin heavy chain (IGH) genes in mature B lymphocytes are the result of recombination of IGHV, IGHD and IGHJ germline genes, followed by somatic mutation. The correct identification of the germline genes that make up a variable VH domain is essential to our understanding of the process of antibody diversity generation as well as to clinical investigations of some leukaemias and lymphomas.Results: We have developed iHMMune-align, an alignment program that uses a hidden Markov model (HMM) to model the processes involved in human IGH gene rearrangement and maturation. The performance of iHMMune-align was compared to that of other immunoglobulin gene alignment utilities using both clonally related and randomly selected IGH sequences. This evaluation suggests that iHMMune-align provides a more accurate identification of component germline genes than other currently available IGH gene characterization programs.Availability: iHMMune-align cross-platform Java executable and web interface are freely available to academic users and can be accessed at http://www.emi.unsw.edu.au/~ihmmune/Contact: bgaeta@cse.unsw.edu.au},
	author = {Ga\"{e}ta, Bruno A. and Malming, Harald R. and Jackson, Katherine J.L. and Bain, Michael E. and Wilson, Patrick and Collins, Andrew M.},
	doi = {10.1093/bioinformatics/btm147},
	eprint = {http://bioinformatics.oxfordjournals.org/content/23/13/1580.full.pdf+html},
	journal = {Bioinformatics},
	number = {13},
	pages = {1580--1587},
	title = {iHMMune-align: hidden Markov model-based alignment and identification of germline genes in rearranged immunoglobulin gene sequences},
	url = {http://bioinformatics.oxfordjournals.org/content/23/13/1580.abstract},
	volume = {23},
	year = {2007}
}

@online{jni,
	author = {Oracle,},
	optaddendum = {•},
	optdate = {•},
	optlanguage = {•},
	optmonth = {•},
	optnote = {•},
	optorganization = {•},
	optpubstate = {•},
	optsubtitle = {•},
	opttitleaddon = {•},
	opturldate = {•},
	optversion = {•},
	title = {Java Native Interface Specification},
	url = {http://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/jniTOC.html},
	year = {2014}
}

@article{cpp,
	author = {Goldthwaite, Lois},
	journal = {ISO/IEC PDTR},
	title = {Technical report on C++ performance},
	volume = {18015},
	year = {2006}
}

@incollection{fasta,
	author = {Pearson, WilliamR.},
	booktitle = {Computer Analysis of Sequence Data},
	doi = {10.1385/0-89603-246-9:307},
	editor = {Griffin, AnnetteM. and Griffin, HughG.},
	isbn = {978-0-89603-246-0},
	language = {English},
	pages = {307--331},
	publisher = {Humana Press},
	series = {Methods in Molecular Biology},
	title = {Using the FASTA Program to Search Protein and DNA Sequence Databases},
	url = {http://dx.doi.org/10.1385/0-89603-246-9%3A307},
	volume = {24},
	year = {1994}
}

@article{qtvjava,
	author = {Dalheimer, Matthias Kalle},
	journal = {Klarlvdalens Datakonsult AB, Tech. Rep},
	title = {A comparison of qt and java for large-scale, industrial-strength gui development},
	year = {2005}
}

@article{bpp,
	author = {Dutheil, Julien and Gaillard, Sylvain and Bazin, Eric and Gl\'{e}min, Sylvain and Ranwez, Vincent and Galtier, Nicolas and Belkhir, Khalid},
	journal = {BMC bioinformatics},
	number = {1},
	pages = {188},
	publisher = {BioMed Central Ltd},
	title = {Bio++: a set of C++ libraries for sequence analysis, phylogenetics, molecular evolution and population genetics},
	volume = {7},
	year = {2006}
}

@article{biojava,
	abstract = {Summary: BioJava is a mature open-source project that provides a framework for processing of biological data. BioJava contains powerful analysis and statistical routines, tools for parsing common file formats and packages for manipulating sequences and 3D structures. It enables rapid bioinformatics application development in the Java programming language.Availability: BioJava is an open-source project distributed under the Lesser GPL (LGPL). BioJava can be downloaded from the BioJava website (http://www.biojava.org). BioJava requires Java 1.5 or higher.Contact: andreas.prlic@gmail.com. All queries should be directed to the BioJava mailing lists. Details are available at http://biojava.org/wiki/BioJava:MailingLists.},
	author = {Holland, R. C. G. and Down, T. A. and Pocock, M. and Prli\'{c}, A. and Huen, D. and James, K. and Foisy, S. and Dr\"{a}ger, A. and Yates, A. and Heuer, M. and Schreiber, M. J.},
	doi = {10.1093/bioinformatics/btn397},
	eprint = {http://bioinformatics.oxfordjournals.org/content/24/18/2096.full.pdf+html},
	journal = {Bioinformatics},
	number = {18},
	pages = {2096--2097},
	title = {BioJava: an open-source framework for bioinformatics},
	url = {http://bioinformatics.oxfordjournals.org/content/24/18/2096.abstract},
	volume = {24},
	year = {2008}
}

@article{biojava3,
	abstract = {Motivation: BioJava is an open-source project for processing of biological data in the Java programming language. We have recently released a new version (3.0.5), which is a major update to the code base that greatly extends its functionality.Results: BioJava now consists of several independent modules that provide state-of-the-art tools for protein structure comparison, pairwise and multiple sequence alignments, working with DNA and protein sequences, analysis of amino acid properties, detection of protein modifications and prediction of disordered regions in proteins as well as parsers for common file formats using a biologically meaningful data model.Availability: BioJava is an open-source project distributed under the Lesser GPL (LGPL). BioJava can be downloaded from the BioJava website (http://www.biojava.org). BioJava requires Java 1.6 or higher. All inquiries should be directed to the BioJava mailing lists. Details are available at http://biojava.org/wiki/BioJava:MailingListsContact: andreas.prlic@gmail.com},
	author = {Prli\'{c}, Andreas and Yates, Andrew and Bliven, Spencer E. and Rose, Peter W. and Jacobsen, Julius and Troshin, Peter V. and Chapman, Mark and Gao, Jianjiong and Koh, Chuan Hock and Foisy, Sylvain and Holland, Richard and Rim\v{s}a, Gediminas and Heuer, Michael L. and Brandst\"{a}tter--M\"{u}ller, H. and Bourne, Philip E. and Willis, Scooter},
	doi = {10.1093/bioinformatics/bts494},
	eprint = {http://bioinformatics.oxfordjournals.org/content/28/20/2693.full.pdf+html},
	journal = {Bioinformatics},
	number = {20},
	pages = {2693--2695},
	title = {BioJava: an open-source framework for bioinformatics in 2012},
	url = {http://bioinformatics.oxfordjournals.org/content/28/20/2693.abstract},
	volume = {28},
	year = {2012}
}

@book{boost-book,
	author = {Schling, Boris},
	isbn = {0982219199, 9780982219195},
	publisher = {XML Press},
	title = {The Boost C++ Libraries},
	year = {2011}
}

@article{boost,
	author = {Dawes, Beman and Abrahams, David and Rivera, Rene},
	journal = {URL http://www. boost. org},
	pages = {36},
	title = {Boost C++ libraries},
	volume = {35},
	year = {2009}
}

@book{stl,
	author = {Musser, David R. and Derge, Gillmer J. and Saini, Atul},
	edition = {3rd},
	isbn = {0321702123, 9780321702128},
	publisher = {Addison-Wesley Professional},
	title = {STL Tutorial and Reference Guide: C++ Programming with the Standard Template Library},
	year = {2009}
}

@article{freelunch,
	author = {Sutter, Herb},
	journal = {Dr. Dobb{\rq}s journal},
	number = {3},
	pages = {202--210},
	title = {The free lunch is over: A fundamental turn toward concurrency in software},
	volume = {30},
	year = {2005}
}

@article{jit,
	abstract = {We present the design and implementation of several optimizations and techniques included in the latest IBM Java™ Just-in-Time (JIT) Compiler. We first discuss some of the modifications we have applied to Sun Microsystems' reference implementation of the Java Virtual Machine (JVM™) Specification to increase the performance, including a change in the object layout. We then describe each of the optimizations, referring to what had to be taken into account because of both the just-in-time nature of the compiler and the requirements of the Java language specification, such as exception checking. We also present code generation techniques targeting Intel architectures, describing the register allocation schemes, exception handling, and code scheduling. Finally we report on the performance of the IBM JIT compiler, showing both the effectiveness of the individual optimizations and the competitive overall performance of the JIT compiler in comparison with a competitor, using industry-standard benchmarki ng programs. All the techniques presented here are included in the official product (JIT Compiler version 3.0), which has been integrated into the IBM Developer Kit for Windows™, Java Technology Edition, Version 1.1.7.},
	author = {Suganuma, T. and Ogasawara, T. and Takeuchi, M. and Yasue, T. and Kawahito, M. and Ishizaki, K. and Komatsu, H. and Nakatani, T.},
	doi = {10.1147/sj.391.0175},
	issn = {0018-8670},
	journal = {IBM Systems Journal},
	month = {},
	number = {1},
	pages = {175--193},
	title = {Overview of the IBM Java Just-in-Time Compiler},
	volume = {39},
	year = {2000}
}

@book{hmm,
	author = {Elliott, Robert J and Aggoun, Lakhdar and Moore, John B},
	publisher = {Springer},
	title = {{Hidden Markov Models}},
	year = {1994}
}

@article{mlpack,
	author = {Curtin, Ryan R and Cline, James R and Slagle, Neil P and March, William B and Ram, Parikshit and Mehta, Nishant A and Gray, Alexander G},
	journal = {The Journal of Machine Learning Research},
	number = {1},
	pages = {801--805},
	publisher = {JMLR. org},
	title = {MLPACK: A scalable C++ machine learning library},
	url = {http://dl.acm.org/citation.cfm?id=2502606; http://www.mlpack.org/mlpack_jmlr.pdf},
	volume = {14},
	x-fetchedfrom = {Google Scholar},
	year = {2013}
}

@article{stochhmm,
	author = {Lott, Paul C and Korf, Ian},
	journal = {Bioinformatics},
	pages = {btu057},
	publisher = {Oxford Univ Press},
	title = {StochHMM: a flexible hidden Markov model tool and C++ library},
	url = {http://bioinformatics.oxfordjournals.org/content/early/2014/01/30/bioinformatics.btu057.short},
	x-fetchedfrom = {Google Scholar},
	year = {2014}
}

@incollection{threads,
	address = {Upper Saddle River, NJ, USA},
	author = {Tanenbaum, Andrew S. and Bos, Herbert},
	booktitle = {{Modern Operating Systems}},
	chapter = {2.2},
	edition = {4th},
	isbn = {013359162X, 9780133591620},
	publisher = {Prentice Hall Press},
	title = {Threads},
	year = {2014}
}

@incollection{syscalls,
	address = {Upper Saddle River, NJ, USA},
	author = {Tanenbaum, Andrew S. and Bos, Herbert},
	booktitle = {{Modern Operating Systems}},
	chapter = {1.6},
	edition = {4th},
	isbn = {013359162X, 9780133591620},
	publisher = {Prentice Hall Press},
	title = {System Calls},
	year = {2014}
}

@book{concurrency,
	author = {Herlihy, Maurice and Shavit, Nir},
	isbn = {978-0-12-370591-4},
	publisher = {Elsevier},
	title = {The Art of Multiprocessor Programming, Revised Reprint},
	url = {http://books.google.com.au/books?hl=en&lr=&id=vfvPrSz7R7QC&oi=fnd&pg=PP2&dq=art+of+multiprocessor+programming+Herlihy,+Maurice&ots=e_fBsPVMeP&sig=D6u_nmnRdj6Lu5Ojg29_j8O_PtI},
	x-fetchedfrom = {Google Scholar},
	year = {2012}
}

@incollection{workstealing,
	author = {Herlihy, Maurice and Shavit, Nir},
	booktitle = {{The Art of Multiprocessor Programming, Revised Reprint}},
	chapter = {16.4},
	isbn = {978-0-12-370591-4},
	publisher = {Elsevier},
	title = {Work Distribution},
	url = {http://books.google.com.au/books?hl=en&lr=&id=vfvPrSz7R7QC&oi=fnd&pg=PP2&dq=art+of+multiprocessor+programming+Herlihy,+Maurice&ots=e_fBsPVMeP&sig=D6u_nmnRdj6Lu5Ojg29_j8O_PtI},
	x-fetchedfrom = {Google Scholar},
	year = {2012}
}

@book{locality,
	address = {Upper Saddle River, NJ, USA},
	author = {Tanenbaum, Andrew S. and Bos, Herbert},
	chapter = {16.4.6, 3},
	edition = {4th},
	isbn = {013359162X, 9780133591620},
	publisher = {Prentice Hall Press},
	title = {{Modern Operating Systems}},
	year = {2014}
}

@misc{qt,
	author = {Trolltech, Qt},
	title = {{4.1 Whitepaper}}
}

@article{raceconditions,
	acmid = {130623},
	address = {New York, NY, USA},
	author = {Netzer, Robert H. B. and Miller, Barton P.},
	doi = {10.1145/130616.130623},
	issn = {1057-4514},
	issue_date = {March 1992},
	journal = {ACM Lett. Program. Lang. Syst.},
	keywords = {critical sections; data races; debugging; nondeterminacy; parallel programs; race conditions},
	month = mar,
	number = {1},
	numpages = {15},
	pages = {74--88},
	publisher = {ACM},
	title = {{What Are Race Conditions?: Some Issues and Formalizations}},
	url = {http://doi.acm.org/10.1145/130616.130623},
	volume = {1},
	year = {1992}
}

